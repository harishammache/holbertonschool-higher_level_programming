# 7-base_geometry.py
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Test where name is a string
>>> bg = BaseGeometry()
>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
TypeError: name must be an integer

Test where age is egal zero
>>> bg = BaseGeometry()
>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
ValueError: age must be greater than 0

test where disance is negativ
>>> bg = BaseGeometry()
>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
ValueError: distance must be greater than 0

test where age is greater than 0
>>> bg = BaseGeometry()
>>> bg.integer_validator("age", 20)

test where name is an integer
>>> bg = BaseGeometry()
>>> bg.integer_validator("name", 3)

test where distance is positiv number
>>> bg = BaseGeometry()
>>> bg.integer_validator("age", 30)

Test verify if the function accept the number than an integer 
>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", -32)
Traceback (most recent call last):
ValueError: my_int must be greater than 0

Test verify if the function accept the number than an integer positif
>>> bg = BaseGeometry()
>>> bg.integer_validator("width", -12)
Traceback (most recent call last):
ValueError: width must be greater than 0

